<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type GameDetails}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GameDetails}">
                    <Grid Background="#00000000"
                          x:Name="PART_ViewHost"
                          d:DesignWidth="{StaticResource DesignWidth}"
                          d:DesignHeight="{StaticResource DesignHeight}"
                          d:DataContext="{x:Static DesignMainViewModel.DesignSelectedGameIntance}"
						  FocusManager.FocusedElement="{Binding ElementName=PART_ButtonContext}"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          KeyboardNavigation.TabNavigation="Contained" UseLayoutRounding="True" >


                        <Grid.RowDefinitions>
                            <RowDefinition Height="620" />
                            <RowDefinition Height="20" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>


				<Border x:Name="GDScreenBorder" Grid.Row="0" Grid.RowSpan="3" Background="{DynamicResource GDMainScreenOverlay}" Panel.ZIndex="-46">

                                            <Border.Style>
                                                <Style TargetType="Border">
													<Setter Property="Height" Value="{StaticResource DesignHeight}"/>
													<Setter Property="Width" Value="{StaticResource DesignWidth}"/>
													<Setter Property="HorizontalAlignment" Value="Left"/>
													<Setter Property="VerticalAlignment" Value="Center"/>
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Opacity" Value="1"/>
													<Style.Triggers>
														<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
															<DataTrigger.EnterActions>
																<BeginStoryboard>
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.6" From="1" To="0"/>
																		<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.5" From="0" To="-1000,0,0,0"/>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.EnterActions>
															<DataTrigger.ExitActions>
																<BeginStoryboard>
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0" To="1"/>
																		<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.5" From="-1000,0,0,0" To="0"/>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.ExitActions>	
														</DataTrigger>	
													</Style.Triggers>
                                                </Style>
                                            </Border.Style>

				</Border>


                            
                            <Grid x:Name="BGImage" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,0,0,0" 
								  Panel.ZIndex="-48" >

                        <Grid.Style>
                            <Style>
                                <Setter Property="ItemsControl.Opacity" Value="1"/>
                                <Setter Property="ItemsControl.Visibility" Value="Visible"/>
                                <Style.Triggers>

									<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:5" Duration="0:0:0" To="1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0" To="0"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>

									<DataTrigger Binding="{Binding ElementName=StopPlayButton, Path=IsChecked}" Value="False">
                                        <DataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1"/>
												</Storyboard>
											</BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0"/>
												</Storyboard>
											</BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>

									<DataTrigger Binding="{Binding ElementName=ScreenshotsButton, Path=IsChecked}" Value="False">
                                        <DataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1"/>
												</Storyboard>
											</BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0"/>
												</Storyboard>
											</BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>

									<!--<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ElementName=StopPlayButton, Path=IsChecked}" Value="False"/>
											<Condition Binding="{Binding ElementName=ScreenshotsButton, Path=IsChecked}" Value="False"/>
										</MultiDataTrigger.Conditions>										
										<MultiDataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1"/>
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.EnterActions>
										<MultiDataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0"/>
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.ExitActions>	
									</MultiDataTrigger>-->

                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

								<FadeImage x:Name="PART_ImageBackground"
											Opacity="1" RenderOptions.BitmapScalingMode="Fant" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,0" 
											VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="UniformToFill">


                        <FadeImage.Style>
                            <Style>
                                <Setter Property="ItemsControl.Opacity" Value="1"/>
                                <Style.Triggers>

                				<!--<MultiDataTrigger>
                    				<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1"/>
							<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable}" Value="True"/>
                    				</MultiDataTrigger.Conditions>
                    				<MultiDataTrigger.EnterActions>
                        			<BeginStoryboard>
                            			<Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:7" Duration="0:0:0.5" From="1" To="0"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.EnterActions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="0" To="1"/>
                            			</Storyboard>
                        			</BeginStoryboard>
                    				</MultiDataTrigger.ExitActions>
                				</MultiDataTrigger>-->

                                </Style.Triggers>
                            </Style>
                        </FadeImage.Style>
								</FadeImage>



                                    </Grid>

 	
								
					<Grid x:Name="DUMB" Grid.RowSpan="3" Grid.ColumnSpan="2" Height="400" Width="Auto" 
						HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="-46">


                        <Grid.Style>
                            <Style>
                                <Setter Property="ItemsControl.Opacity" Value="0"/>
                                <Setter Property="ItemsControl.Margin" Value="70,50,0,0"/>
                                <Setter Property="ItemsControl.Visibility" Value="Collapsed"/>
                                <Style.Triggers>

									<DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
										<Setter Property="ItemsControl.Visibility" Value="Visible" />
									</DataTrigger>
									
									<!--<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
										<Setter Property="ItemsControl.Visibility" Value="Collapsed" />
									</DataTrigger>-->

									<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0.5" From="0" To="1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>

									<DataTrigger Binding="{Binding ElementName=DUMB, Path=Opacity}" Value="1">
										<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_ButtonContext}"/>
									</DataTrigger>
						
									<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
										<DataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.EnterActions>
										<DataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="1"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.ExitActions>	
									</DataTrigger>	

									<DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
										<DataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" From="70,150,0,0" To="70,30,0,0">
														<ThicknessAnimation.EasingFunction>
															<CubicEase EasingMode="EaseOut"/>
														</ThicknessAnimation.EasingFunction>
													</ThicknessAnimation>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" From="0" To="1"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.EnterActions>
										<DataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.2" From="70,50,0,0" To="70,50,0,0">
														<ThicknessAnimation.EasingFunction>
															<CubicEase EasingMode="EaseOut"/>
														</ThicknessAnimation.EasingFunction>
													</ThicknessAnimation>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.ExitActions>
									</DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Height="250">
								
									<StackPanel.Style>
										<Style>
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
													<DataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.ExitActions>	
												</DataTrigger>	
											</Style.Triggers>
										</Style>
									</StackPanel.Style>

                                <Border x:Name="ExtraMetadataLoader_LogoLoaderControlGrid"
												VerticalAlignment="Stretch"
												HorizontalAlignment="Stretch"
												MinHeight="{PluginSettings Plugin=ExtraMetadataLoader, Path=LogoMaxHeight, FallbackValue=0}"
												Tag="{DynamicResource DetailsViewAllowUseOfLogos}">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=EnableLogos, FallbackValue=False}" Value="false">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}, FallbackValue=False}" Value="false" >
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ContentControl x:Name="ExtraMetadataLoader_LogoLoaderControl" />

                                </Border>


                            </StackPanel>
								
								
								<!--LibraryManagement feature icons-->
								<StackPanel Width="Auto" Orientation="Horizontal" VerticalAlignment="Center" Opacity="0" Margin="-145,140,0,0" Focusable="False">
									<StackPanel.Style>
										<Style>
											<Style.Triggers>	

												<DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:.3" Duration="0:0:2" To="445,0,0,0">
																	<ThicknessAnimation.EasingFunction>
																		<CubicEase EasingMode="EaseOut"/>
																	</ThicknessAnimation.EasingFunction>
																</ThicknessAnimation>
																<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:.4" Duration="0:0:1" To="5,140,0,0">
																	<ThicknessAnimation.EasingFunction>
																		<CubicEase EasingMode="EaseOut"/>
																	</ThicknessAnimation.EasingFunction>
																</ThicknessAnimation>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:.3" Duration="0:0:0.7" From="0" To="1"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
													<DataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0" To="-145,140,0,0">
																	<ThicknessAnimation.EasingFunction>
																		<CubicEase EasingMode="EaseOut"/>
																	</ThicknessAnimation.EasingFunction>
																</ThicknessAnimation>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.ExitActions>
												</DataTrigger>
												
												<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
													<DataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.ExitActions>	
												</DataTrigger>	
											</Style.Triggers>
										</Style>
									</StackPanel.Style>
									<StackPanel x:Name="PlatformSourceInfo" Width="Auto" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
										<Image 	x:Name="ButtonSourceImage" Source="{ThemeFileBinding Source.Name, PathFormat='Icons/Source/{0}.png'}" Height="50" 
												Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="Fant"/>
										<Image 	x:Name="ButtonPlatformImage" Source="{ThemeFileBinding Game.Platforms[0].Name, PathFormat='Icons/Source/{0}.png'}" Height="50" 
												Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="Fant"/>
										<TextBlock  Background="Transparent" Style="{DynamicResource TextBlockBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" 
												   Text="&#xF127;" FontFamily="Segoe MDL2 Assets" FontSize="3" Margin="15,-3" />
									</StackPanel>
									<StackPanel x:Name="YearInfo" Width="Auto" Orientation="Horizontal" VerticalAlignment="Center">
										<Border x:Name="YearButton" Margin="0,0,7,0" BorderBrush="White" CornerRadius="8" BorderThickness="2" Height="40">
											<TextBlock x:Name="ReleaseYear" Background="Transparent" Style="{DynamicResource TextBlockBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" 
													   Text="{Binding ReleaseYear}" FontFamily="{DynamicResource FontFamily}" FontSize="20" Margin="8,0" />
										</Border>
									</StackPanel>
									<StackPanel x:Name="PlayStatusInfo" Width="Auto" Orientation="Horizontal" VerticalAlignment="Center">
										<Border x:Name="PlayStatusButton" Margin="0" BorderBrush="White" CornerRadius="8" BorderThickness="2" Height="40">
											<TextBlock x:Name="PlayStatus" Background="Transparent" Style="{DynamicResource TextBlockBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" 
													   Text="{Binding CompletionStatus}" FontFamily="{DynamicResource FontFamily}" FontSize="20" Margin="8,0" />
										</Border>
									</StackPanel>
									<StackPanel x:Name="DemoInfo" Width="Auto" Orientation="Horizontal" VerticalAlignment="Center" Visibility="Collapsed">
										<Border x:Name="DemoButton" Margin="7,0,0,0" BorderBrush="White" CornerRadius="7" BorderThickness="2" Height="30">
											<TextBlock x:Name="DemoStatus" Background="Transparent" Style="{DynamicResource TextBlockBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" 
													   Text="Demo" FontFamily="{DynamicResource FontFamilyBold}" FontSize="16" Margin="5,-3" />
										</Border>
									</StackPanel>
									<TextBlock  Background="Transparent" Style="{DynamicResource TextBlockBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" 
											   Text="&#xF127;" FontFamily="Segoe MDL2 Assets" FontSize="3" Margin="15,-3" />
									<StackPanel x:Name="TimePlayedInfo" Width="Auto" Orientation="Horizontal" VerticalAlignment="Center">	
										<TextBlock x:Name="TimePlayed" Background="Transparent" Style="{DynamicResource TextBlockBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" 
												   Text="{Binding Playtime, Converter={StaticResource PlayTimeToStringConverter}}" FontFamily="{DynamicResource FontFamilyBold}" FontSize="30" Margin="0" />
									</StackPanel>
									<StackPanel x:Name="FavoriteFeaturesInfo" Width="Auto" Orientation="Horizontal" VerticalAlignment="Center">
										<TextBlock  Background="Transparent" Style="{DynamicResource TextBlockBaseStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" 
												   Text="&#xF127;" FontFamily="Segoe MDL2 Assets" FontSize="3" Margin="15,-3" />
										<Image 	x:Name="ButtonFavoriteImage" Source="{ThemeFileBinding Name, PathFormat='Icons/Filter/Favorites.png'}" Height="40" 
												Margin="0,-3,7,0" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="Fant"/>
										<ContentControl x:Name="LibraryManagement_PluginFeaturesIconList" Height="35" Focusable="False" IsTabStop="False" />
									</StackPanel>
								</StackPanel>
								
								<StackPanel Width="Auto" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="50,80">
									<StackPanel.Style>
										<Style>
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
													<DataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.ExitActions>	
												</DataTrigger>	
											</Style.Triggers>
										</Style>
									</StackPanel.Style>	
									<!--<StackPanel x:Name="TimePlayed">									
										<TextBlock Style="{DynamicResource TextBlockBaseStyle}" 
												   Text="{DynamicResource LOCTimePlayed}"
												   Margin="0,0,0,5" FontFamily="{DynamicResource FontFamilyThin}" FontSize="20" />
										<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
												   Text="{Binding Playtime, Converter={StaticResource PlayTimeToStringConverter}}" FontSize="35" />
									</StackPanel>-->

									<!--<StackPanel x:Name="YearInfo" Margin="45,0,0,0">
										<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
												   Text="{DynamicResource LOCGameReleaseYearTitle}"
												   Margin="0,0,0,5" FontFamily="{DynamicResource FontFamilyThin}" FontSize="20" />
										<TextBlock x:Name="GameRelease" Style="{DynamicResource TextBlockBaseStyle}"
												   Text="{Binding ReleaseYear}" FontSize="35" />
									</StackPanel>-->

									<!--<StackPanel Margin="45,0,0,0">
										<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
												   Text="{DynamicResource LOCLibrary}"
												   Margin="0,0,0,5" FontFamily="{DynamicResource FontFamilyThin}" FontSize="20"  />
										<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
												   Text="{Binding Library}" FontSize="35" />
									</StackPanel>-->

									<!--<StackPanel x:Name="GamePlatformInfo" Margin="45,0,0,0">
										<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
												   Text="{DynamicResource LOCGamePlatformTitle}"
												   Margin="0,0,0,5" FontFamily="{DynamicResource FontFamilyThin}" FontSize="20" />
										<StackPanel x:Name="SourcePlatform" Orientation="Horizontal">
											<TextBlock x:Name="GameLibrary" Style="{DynamicResource TextBlockBaseStyle}"
													   Text="{Binding Library}" FontSize="35" Margin="0,0,10,0" />
											<TextBlock x:Name="GamePlatform" Style="{DynamicResource TextBlockBaseStyle}"
													   Text="{Binding Platforms, Converter={StaticResource ListToStringConverter}}" FontSize="35" />
										</StackPanel>
									</StackPanel>-->

									<!--<StackPanel x:Name="InGameInfo" Margin="45,0,0,0">
										<StackPanel.Style>
											<Style TargetType="StackPanel">
												<Setter Property="Visibility" Value="Collapsed" />
												<Style.Triggers>
													<DataTrigger Binding="{PluginSettings Plugin=NewsViewer, Path=PlayersCountAvailable, FallbackValue=False}" Value="True">
														<Setter Property="Visibility" Value="Visible" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</StackPanel.Style>		
										<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
												   Text="Players Online"
												   Margin="0,0,0,5" FontFamily="{DynamicResource FontFamilyThin}" FontSize="20" />
										<ContentControl x:Name="NewsViewer_PlayersInGameViewerControl">
											<ContentControl.Resources>
												<Style TargetType="Button" BasedOn="{StaticResource PlayersCountButtonStyle}">
													<Setter Property="Focusable" Value="False" />
												</Style>
											</ContentControl.Resources>
										</ContentControl>
									</StackPanel>-->
								</StackPanel>

                    			<Grid.CacheMode>
                        			<BitmapCache  EnableClearType="False"
                              			RenderAtScale="1"
                              			SnapsToDevicePixels="False" />
                    			</Grid.CacheMode>
					</Grid>

                        <Grid Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Left" 
				  FocusVisualStyle="{x:Null}" Visibility="Visible" >

                            <Grid.Style>
                                <Style>
                                    <Setter Property="ItemsControl.Opacity" Value="0"/>
                                    <Setter Property="ItemsControl.Margin" Value="70,0,0,70"/>
                                    <Style.Triggers>

                                        <!--<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsLogoAvailable}" Value="False">
                                                                                <Setter Property="ItemsControl.Margin" Value="70,300,0,0" />
                                                                            </DataTrigger>-->



                                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0:0:0" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.2" Duration="0:0:0.9" From="0" To="1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=ZoomButton, Path=IsChecked}" Value="True">
                                            <!--<Setter Property="Opacity" Value="0.3"/>-->
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0.3"/>
                                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0" To="10,0,0,10" Duration="0:0:0.2">
                                                            <ThicknessAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </ThicknessAnimation.EasingFunction>
                                                        </ThicknessAnimation>
                                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0.2" To="20,0,0,20" Duration="0:0:0.2">
                                                            <ThicknessAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </ThicknessAnimation.EasingFunction>
                                                        </ThicknessAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0.3" To="1"/>
                                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0" To="10,0,0,10" Duration="0:0:0.2">
                                                            <ThicknessAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </ThicknessAnimation.EasingFunction>
                                                        </ThicknessAnimation>
                                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0.2" To="70,0,0,70" Duration="0:0:0.2">
                                                            <ThicknessAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </ThicknessAnimation.EasingFunction>
                                                        </ThicknessAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>


                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <StackPanel Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FocusVisualStyle="{x:Null}">
                                <!--Achievements-->
                                <Grid Height="Auto" Width="675" Margin="0,0,10,10">
                                    <Grid.Style>
                                        <Style>
                                            <Setter Property="Grid.Visibility" Value="Visible"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData, FallbackValue=False}" Value="False">
                                                    <Setter Property="Grid.Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}" Background="#FF252525">
                                        <Border.Effect>
                                            <DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
                                        </Border.Effect>
                                        <Border.CacheMode>
                                            <BitmapCache RenderAtScale="2" />
                                        </Border.CacheMode>
                                    </Border>
                                    <StackPanel x:Name="AchievementsPanel" Margin="10,10,10,-90"
																		Orientation="Vertical"
																		Width="Auto"
																		MaxWidth="675"
																		HorizontalAlignment="Center"
																		Grid.Column="5" Grid.RowSpan="7" Grid.Row="0">

                                        <!--<StackPanel Orientation="Horizontal" Width="675">
																		<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
																				   Text="{DynamicResource LOCSuccessStoryAchievements}"
																				   FontSize="30"
																			   VerticalAlignment="Center"
																			   Margin="0,0,10,0"/>
																	</StackPanel>-->

                                        <StackPanel Margin="20,0,20,0" HorizontalAlignment="Center" VerticalAlignment="Top" Height="Auto" Orientation="Horizontal">
                                            <StackPanel Height="Auto" Width="Auto" Margin="0,0,0,0" HorizontalAlignment="Center" Orientation="Horizontal">
                                                <!--<TextBlock HorizontalAlignment="Left" Height="Auto" Margin="1,4,1,0" TextWrapping="Wrap" Text="&#xEDD7;" Width="Auto" VerticalAlignment="Center" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" FontSize="40"/>-->
                                                <Label Content="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" 
																						   HorizontalAlignment="Left" FontFamily="{DynamicResource FontFamily}" FontSize="50"
																						   Padding="0,0,0,5" Margin="0,3,0,0" Height="Auto" Width="Auto" VerticalAlignment="Top">
                                                    <Label.Style>
                                                        <Style TargetType="{x:Type Label}">
                                                            <Setter Property="Padding" Value="5,0,5,5" />
                                                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrushTwo}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>
                                                <Label Content="of" Foreground="White" Height="Auto" Width="Auto" FontSize="30" FontFamily="{DynamicResource FontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1,3,1,0"/>
                                                <Label Content="{PluginSettings Plugin=SuccessStory, Path=Total}" 
																				HorizontalAlignment="Right" FontSize="50" FontFamily="{DynamicResource FontFamily}"
																				Padding="0,0,0,5" Margin="0,3,0,0" Height="Auto" Width="Auto" VerticalAlignment="Top">
                                                    <Label.Style>
                                                        <Style TargetType="{x:Type Label}">
                                                            <Setter Property="Padding" Value="0,0,5,5" />
                                                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrushTwo}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>
                                            </StackPanel>
                                        </StackPanel>
                                        <ProgressBar Minimum="0" Maximum="100" Height="35" Width="600" Margin="0,3,0,3"
																									 Visibility="{Binding ElementName=PART_SSTabHeader, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}"
																									 Value="{PluginSettings Plugin=SuccessStory, Path=Percent}" />
                                        <StackPanel Margin="20,0,20,0" VerticalAlignment="Top" HorizontalAlignment="Center" Height="Auto" Width="600" Orientation="Horizontal">
                                            <StackPanel Height="Auto" Width="300" Margin="0,0,0,0" HorizontalAlignment="Left" Orientation="Horizontal">
                                                <Label Content="{PluginSettings Plugin=SuccessStory, Path=Percent}" 
																				HorizontalAlignment="Right" FontSize="30" FontFamily="{DynamicResource FontFamily}"
																				Padding="5,3,0,5" Margin="0" Height="Auto" Width="Auto" VerticalAlignment="Top">
                                                    <Label.Style>
                                                        <Style TargetType="{x:Type Label}">
                                                            <Setter Property="Padding" Value="5,3,0,5" />
                                                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrushTwo}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>
                                                <Label Content="%" Foreground="White" Height="Auto" Width="Auto" FontSize="30" FontFamily="{DynamicResource FontFamily}" Margin="0,-2,0,-5" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <Label Content="Complete" Foreground="White" Height="Auto" Width="Auto" FontSize="30" FontFamily="{DynamicResource FontFamily}" Margin="0,-2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            </StackPanel>
                                            <StackPanel Height="Auto" Width="300" Margin="0,0,0,0" HorizontalAlignment="Right" Orientation="Horizontal">
                                                <Label Content="{PluginSettings Plugin=SuccessStory, Path=Locked}" 
																						HorizontalAlignment="Right" FontSize="30" FontFamily="{DynamicResource FontFamily}"
																						Padding="5,3,0,5" Margin="0" Height="Auto" Width="Auto" VerticalAlignment="Top">
                                                    <Label.Style>
                                                        <Style TargetType="{x:Type Label}">
                                                            <Setter Property="Padding" Value="5,3,0,5" />
                                                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrushTwo}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                </Label>
                                                <Label Content="Remaining" Foreground="White" Height="Auto" Width="Auto" FontSize="30" FontFamily="{DynamicResource FontFamily}" Margin="0,-2,0,0" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,100" Background="#00000000" Height="Auto" Width="675" HorizontalAlignment="Center">
                                            <StackPanel.Style>
                                                <Style>
                                                    <Setter Property="StackPanel.Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
                                                            <Setter Property="StackPanel.Visibility" Value="Visible"/>
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <!--<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.15" From="0,0,0,0" To="0,0,0,100"/>-->
                                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" From="0" To="1"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <ContentControl x:Name="SuccessStory_PluginCompactUnlocked" Margin="10,5,10,5" Padding="15" FontSize="20" FontWeight="SemiBold" />
                                            <!--<ContentControl x:Name="SuccessStory_PluginList" Margin="0,5,0,5" />
																		<ContentControl x:Name="SuccessStory_PluginUserStats" Margin="0,5,0,5" />
																		<ContentControl x:Name="SuccessStory_PluginCompactList" Margin="0,0,0,-15" />
																		<ContentControl x:Name="SuccessStory_PluginCompactLocked" Margin="0,5,0,5" />
																		<ContentControl x:Name="SuccessStory_PluginChart" />-->
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>

                                <!--HowLongToBeat-->
                                <Grid Grid.ColumnSpan="1" Grid.RowSpan="1" x:Name="HowLongToBeatInfo" Height="Auto" Width="675" Margin="0,0,10,10" HorizontalAlignment="Left">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData, FallbackValue=False}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}" Background="#FF252525">
                                        <Border.Effect>
                                            <DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
                                        </Border.Effect>
                                        <Border.CacheMode>
                                            <BitmapCache RenderAtScale="2" />
                                        </Border.CacheMode>
                                    </Border>
                                    <Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,0" />
                                    <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal" Margin="0,15,0,20" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                        <!--<StackPanel x:Name="TimePlayedInfo" Height="Auto" Width="Auto" MaxWidth="300" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">								
																			<TextBlock FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold"
																					   Text="{DynamicResource LOCTimePlayed}" />
																			<TextBlock x:Name="TimePlayed" Height="Auto" Foreground="{DynamicResource GlyphBrush}" FontSize="50" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,-10,10,0" 
																					   Text="{Binding Playtime, Converter={StaticResource PlayTimeToStringConverter}}" />
																		</StackPanel>-->
                                        <StackPanel x:Name="HLTBInfo" Height="Auto" Width="Auto" MaxWidth="600" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
                                            <StackPanel x:Name="HLTB" Margin="0,0,0,0" Tag="{PluginSettings Plugin=HowLongToBeat, Path=HasData}">
                                                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" VerticalAlignment="Center">
                                                    <StackPanel Orientation="Vertical" Margin="10,0,10,0">
                                                        <TextBlock Text="Main Story" FontSize="20" FontFamily="{DynamicResource FontFamily}" Foreground="White" />
                                                        <TextBlock FontSize="34" Foreground="{DynamicResource GlyphBrushTwo}" FontWeight="Bold" Text="{PluginSettings Plugin=HowLongToBeat, Path=MainStoryFormat}" Margin="0,20,0,0" />
                                                    </StackPanel>

                                                    <StackPanel Orientation="Vertical" Margin="70,0,10,0">
                                                        <TextBlock Text="Main + Extra" FontSize="20" FontFamily="{DynamicResource FontFamily}" Foreground="White" />
                                                        <TextBlock FontSize="34" Foreground="{DynamicResource GlyphBrushTwo}" FontWeight="Bold" Text="{PluginSettings Plugin=HowLongToBeat, Path=MainExtraFormat}" Margin="0,20,0,0" />
                                                    </StackPanel>

                                                    <StackPanel Orientation="Vertical" Margin="70,0,0,0">
                                                        <TextBlock Text="{DynamicResource LOCHowLongToBeatCompletionist}" FontSize="20" FontFamily="{DynamicResource FontFamily}" Foreground="White" />
                                                        <TextBlock FontSize="34" Foreground="{DynamicResource GlyphBrushTwo}" FontWeight="Bold" Text="{PluginSettings Plugin=HowLongToBeat, Path=CompletionistFormat}" Margin="0,20,0,0" />
                                                    </StackPanel>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>

                                <!--Scores-->
                                <Grid Grid.ColumnSpan="1" Grid.RowSpan="1" x:Name="ScoreInfo" Height="Auto" Width="675" Margin="0,0,10,10" HorizontalAlignment="Left">
                                    <Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}" Background="#FF252525">
                                        <Border.Effect>
                                            <DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
                                        </Border.Effect>
                                        <Border.CacheMode>
                                            <BitmapCache RenderAtScale="2" />
                                        </Border.CacheMode>
                                    </Border>
                                    <Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,0" />
                                    <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal" Margin="0,15,0,10" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                        <StackPanel x:Name="CommunityScoreInfo" Height="Auto" Width="Auto" MaxWidth="200" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
                                            <TextBlock Style="{DynamicResource BaseTextBlockStyle}" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Text="Community Score" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
                                            <TextBlock Text="{Binding CommunityScore}" x:Name="CommunityScore" Height="Auto" Foreground="{DynamicResource GlyphBrushTwo}" FontSize="34" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,10,0" />
                                        </StackPanel>
                                        <StackPanel x:Name="CriticScoreInfo" Height="Auto" Width="Auto" MaxWidth="200" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
                                            <TextBlock Style="{DynamicResource BaseTextBlockStyle}" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Text="Critic Score" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
                                            <TextBlock Text="{Binding CriticScore}" x:Name="CriticScore" Height="Auto" Foreground="{DynamicResource GlyphBrushTwo}" FontSize="34" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,10,0" />
                                        </StackPanel>
                                        <StackPanel x:Name="UserScoreInfo" Height="Auto" Width="Auto" MaxWidth="200" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
                                            <TextBlock Style="{DynamicResource BaseTextBlockStyle}" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Text="User Score" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
                                            <TextBlock Text="{Binding UserScore}" x:Name="UserScore" Height="Auto" Foreground="{DynamicResource GlyphBrushTwo}" FontSize="34" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,10,0" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>

                                <!--Installation-->
                                <Grid x:Name="InstallationInfo" Height="Auto" Width="675" Margin="0,0,10,10">
                                    <Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}" Background="#FF252525">
                                        <Border.Effect>
                                            <DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
                                        </Border.Effect>
                                        <Border.CacheMode>
                                            <BitmapCache RenderAtScale="2" />
                                        </Border.CacheMode>
                                    </Border>
                                    <Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,0" />
                                    <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal" Margin="0,15,0,15" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                        <!--<StackPanel x:Name="VersionInfo" Height="Auto" Width="Auto" MaxWidth="200" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
																					<TextBlock Style="{DynamicResource BaseTextBlockStyle}" FontSize="20" Foreground="White" Text="Version" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
																					<TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30" Text="{Binding Version}" 
																							   TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="Auto" MaxWidth="155" />
																				</StackPanel>-->
                                        <StackPanel x:Name="InstallSizeInfo" Height="Auto" Width="Auto" MaxWidth="320" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
                                            <TextBlock Style="{DynamicResource BaseTextBlockStyle}" Text="Install Size" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock x:Name="InstallSize" Text="{Binding InstallSize, Converter={StaticResource NullableUlongBytesSizeToStringConverter}}" Height="Auto" FontSize="35" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,-5,10,0" Foreground="White" />
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel x:Name="InstallDirectoryInfo" Height="Auto" Width="Auto" MaxWidth="320" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
                                            <TextBlock Style="{DynamicResource BaseTextBlockStyle}" Text="Install Location" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
                                            <TextBlock x:Name="InstallDirectory" Text="{Binding InstallDirectory}" Height="Auto" FontSize="15" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,10,0" Foreground="White" 
																							   TextWrapping="WrapWithOverflow" Padding="0,0,20,0" TextTrimming="CharacterEllipsis" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>

                                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FocusVisualStyle="{x:Null}">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=MoreButton,Path=IsChecked}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0" To="0,-190,0,0" Duration="0:0:0.3">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <CubicEase EasingMode="EaseOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0.3" To="0,-150,0,0" Duration="0:0:0.2">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <CubicEase EasingMode="EaseOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0" To="0,-190,0,0" Duration="0:0:0.2">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <CubicEase EasingMode="EaseOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0.2" To="0" Duration="0:0:0.2">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <CubicEase EasingMode="EaseOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <!--<StackPanel.Style>
										<Style TargetType="StackPanel">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=ZoomButton, Path=IsChecked}" Value="True">
														<Setter Property="Opacity" Value="0.3"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</StackPanel.Style>-->
                                <ButtonEx x:Name="PART_ButtonContext" IsDefault="True" VerticalAlignment="Center" Margin="0,0,5,0" MinWidth="240"
											  Height="60" HorizontalContentAlignment="Center" Style="{DynamicResource PlayInstallButton}" />

                                <StackPanel Margin="8,0">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ElementName=StopPlayButton,Path=IsChecked}" Value="False" />
                                                        <Condition Binding="{Binding ElementName=ScreenshotsButton,Path=IsChecked}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <CheckBoxEx x:Name="ZoomButton" Style="{DynamicResource ZoomButton}"/>
                                </StackPanel>

                                <StackPanel>
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ScreenshotsButton, Path=IsChecked}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <ContentControl x:Name="DuplicateHider_ContentControl" Focusable="False" Margin="0,0,0,0" Height="{Binding ActualHeight, ElementName=PART_ButtonContext}">
                                        <ContentControl.Tag>
                                            <Style TargetType="ContentControl">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <ItemsControl ItemsSource="{Binding Games}" 
																			Focusable="False">
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate >
                                                                        <StackPanel Orientation="Horizontal"/>
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <ButtonEx x:Name="_Button" Width="{Binding ActualWidth, ElementName=Toggler}"  HorizontalContentAlignment="Center" 
																					VerticalContentAlignment="Center" Margin="8,0" Command="{Binding SelectCommand}" Opacity="1">
                                                                            <StackPanel x:Name="Titlasdsdasdaersiones"  Width="{Binding ActualWidth, ElementName=Toggler}" HorizontalAlignment="Stretch" Orientation="Horizontal" Opacity="1" >
                                                                                <Image x:Name="DHLogo" Source="{Binding Icon}" RenderOptions.BitmapScalingMode="Fant" Margin="-6,0" Width="25" />
                                                                                <TextBlock x:Name="DHLibrary" Style="{DynamicResource TextBlockBaseStyle}" Visibility="Collapsed" FontFamily="{DynamicResource FontFamilyBold}"
																							   Foreground="{DynamicResource TextBrush}" VerticalAlignment="Center" Text="{Binding SourceName}" FontSize="18" Margin="20,0,5,0" />
                                                                                <!-- <TextBlock Text=" ("  FontSize="18"  />
																					<TextBlock Text="{Binding SourceName}"  FontSize="18" /> 
																					<TextBlock Text="{Binding PlatformsName, Converter={StaticResource ListToStringConverter}}"  FontSize="18" /> 
																				  <TextBlock Text="{Binding PlatformsName}"  FontSize="18" /> A
																				  <TextBlock Text="{Binding PlatformName}"  FontSize="18" /> 
																				  <TextBlock Text="{Binding PlatformGameName}"  FontSize="18" /> 
																				  <TextBlock Text="{Binding Platform}"  FontSize="18" />  
																				  <TextBlock Text=")"  FontSize="18" />  -->
                                                                            </StackPanel>
                                                                        </ButtonEx>
                                                                        <DataTemplate.Triggers>
                                                                            <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                                                <Setter Property="Visibility" Value="Collapsed" TargetName="_Button"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding IsFocused, ElementName=_Button}" Value="True">
                                                                                <Setter Property="Visibility" Value="Visible" TargetName="DHLibrary" />
                                                                            </DataTrigger>
                                                                        </DataTemplate.Triggers>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ContentControl.Tag>
                                    </ContentControl>
                                </StackPanel>

                                <StackPanel>
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{PluginSettings Plugin=ReviewViewer, Path=ReviewsAvailable, FallbackValue=False}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <CheckBoxEx x:Name="ReviewsButton" VerticalAlignment="Center" Margin="8,0" MinWidth="60"
													Height="60" HorizontalContentAlignment="Center" Style="{DynamicResource ReviewsButton}" />
                                    <!--<ToggleButtonEx x:Name="PlayPauseButton" Style="{DynamicResource PlayPauseButton}" Margin="8,0"
														IsChecked="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.SettingsModel.Settings.IsVideoPlaying, Mode=OneWay, FallbackValue={StaticResource False}}"
														Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPlayCommand}" />-->
                                </StackPanel>

                                <ButtonEx x:Name="PART_ButtonOptions" VerticalAlignment="Center" Margin="8,0" MinWidth="60"
														  Height="60" HorizontalContentAlignment="Center" Style="{DynamicResource GameOptionsButton}" />

                            </StackPanel>
                            </StackPanel>

                            <StackPanel x:Name="MoreButtons" Orientation="Horizontal" Margin="50,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FocusVisualStyle="{x:Null}">
									<StackPanel.Style>
										<Style TargetType="StackPanel">
											<Setter Property="Opacity" Value="0" />
											<Style.Triggers>
											   <DataTrigger Binding="{Binding ElementName=MoreButton,Path=IsChecked}" Value="True">
													<DataTrigger.EnterActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
																<!--<ThicknessAnimation Storyboard.TargetProperty="Margin" From="50,50,0,0" To="50,0,0,0" Duration="0:0:0.2-->
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.EnterActions>
													<DataTrigger.ExitActions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
																<!--<ThicknessAnimation Storyboard.TargetProperty="Margin" From="50,0,0,0" To="50,50,0,0" Duration="0:0:0.2"/>-->
															</Storyboard>
														</BeginStoryboard>
													</DataTrigger.ExitActions>
												</DataTrigger>
												<DataTrigger Binding="{Binding ElementName=MoreButtons, Path=Opacity}" Value="0">
													<Setter Property="Visibility" Value="Collapsed" />
												</DataTrigger>													
													<!--<DataTrigger Binding="{Binding ElementName=ZoomButton, Path=IsChecked}" Value="True">
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
																<ThicknessAnimation Storyboard.TargetProperty="Margin" From="50,0,0,0" To="0" Duration="0:0:0.2"/>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
																<ThicknessAnimation Storyboard.TargetProperty="Margin" From="0" To="50,0,0,0" Duration="0:0:0.2"/>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.ExitActions>
													</DataTrigger>-->												
											</Style.Triggers>
										</Style>
									</StackPanel.Style>	

									<!--video text-->				  
									<StackPanel Tag="{DynamicResource Trailers}" Style="{DynamicResource TrailersStyle}">
										<StackPanel.Style>
											<Style TargetType="StackPanel">
												<Setter Property="Visibility" Value="Collapsed" />
												<Style.Triggers>
													<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable, FallbackValue=False}" Value="True">
														<Setter Property="Visibility" Value="Visible" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</StackPanel.Style>										
										<StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
											<!--<StackPanel.Style>
												<Style TargetType="StackPanel">
													<Setter Property="Visibility" Value="Visible"/>
													<Setter Property="Margin" Value="0"/>
													<Style.Triggers>
														<DataTrigger Binding="{Binding ElementName=ZoomButton, Path=IsChecked}" Value="True">
															<DataTrigger.EnterActions>
																<BeginStoryboard>
																	<Storyboard>
																		<ThicknessAnimation Storyboard.TargetProperty="Margin" From="0" To="-200,160,0,0" Duration="0:0:0.2"/>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.EnterActions>
															<DataTrigger.ExitActions>
																<BeginStoryboard>
																	<Storyboard>
																		<ThicknessAnimation Storyboard.TargetProperty="Margin" From="-200,160,0,0" To="0" Duration="0:0:0.2"/>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.ExitActions>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>-->
											<!--<StackPanel Margin="0,0,10,0">
												<StackPanel.Style>
													<Style TargetType="StackPanel">
														<Setter Property="Visibility" Value="Visible" />
														<Style.Triggers>
											   <DataTrigger Binding="{Binding ElementName=StopPlayButton,Path=IsChecked}" Value="True">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
														</Style.Triggers>
													</Style>
												</StackPanel.Style>	
												<ToggleButtonEx x:Name="PlayPauseButton" Style="{DynamicResource PlayPauseButton}"
															IsChecked="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.SettingsModel.Settings.IsVideoPlaying, Mode=TwoWay, FallbackValue={StaticResource False}}"
															Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPlayCommand}"/>
											</StackPanel>-->
											<StackPanel Margin="8,0">
												<!--<StackPanel.Style>
													<Style TargetType="StackPanel">
														<Setter Property="Visibility" Value="Visible" />
														<Style.Triggers>
															<DataTrigger Binding="{Binding ElementName=ScreenshotsButton, Path=IsChecked}" Value="True">
																<Setter Property="Visibility" Value="Collapsed"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</StackPanel.Style>	-->
												<ToggleButtonEx x:Name="StopPlayButton" Style="{DynamicResource StopPlayButton}"
																IsChecked="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.SettingsModel.Settings.IsVideoPlaying, Mode=OneWay, FallbackValue={StaticResource False}}"
																Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPlayCommand}" />
											</StackPanel>
											<StackPanel Margin="8,0">
												<StackPanel.Style>
													<Style TargetType="StackPanel">
														<Setter Property="Visibility" Value="Visible" />
														<Style.Triggers>
														   <DataTrigger Binding="{Binding ElementName=StopPlayButton,Path=IsChecked}" Value="False">
																<Setter Property="Visibility" Value="Collapsed"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</StackPanel.Style>	
												<CheckBoxEx x:Name="MuteButton" Style="{DynamicResource MuteButton}"
															IsChecked="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.IsPlayerMuted, Mode=OneWay, FallbackValue={StaticResource False}}"
															Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoMuteCommand}"/>
											</StackPanel>										
											<!--SliderEx x:Name="VolumeSlider"
													Margin="0,0,10,0" VerticalAlignment="Center" Width="100" HorizontalAlignment="Center"
											IsMoveToPointEnabled="True" 
											IsSnapToTickEnabled="False" 
											Minimum="0.0" Maximum="1.0" TickFrequency="0.1" SmallChange="0.1" LargeChange="0.2"
											Value="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPlayerVolumeLinear, Mode=TwoWay, FallbackValue={StaticResource Zero}}">
											</SliderEx-->                                                
										</StackPanel>
									</StackPanel>
									
									<StackPanel Orientation="Horizontal">													  
										<StackPanel.Style>
											<Style>
												<Setter Property="StackPanel.Visibility" Value="Visible"></Setter>
												<Style.Triggers>
													<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData, FallbackValue=False}" Value="False">
														<Setter Property="Grid.Visibility" Value="Collapsed"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</StackPanel.Style>
										<CheckBoxEx x:Name="ScreenshotsButton" VerticalAlignment="Center" Margin="8,0" MinWidth="60"
													Height="60" HorizontalContentAlignment="Center" Style="{DynamicResource ScreenshotsButton}"
													Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPauseCommand}"  />
										<StackPanel Orientation="Horizontal">
											<StackPanel.Style>
												<Style>
													<Setter Property="StackPanel.Visibility" Value="Visible"></Setter>
													<Style.Triggers>
														<DataTrigger Binding="{Binding ElementName=ScreenshotsButton,Path=IsChecked}" Value="False">
															<Setter Property="Grid.Visibility" Value="Collapsed"></Setter>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>
											<!--<StackPanel.Style>
												<Style>
													<Setter Property="Visibility" Value="Visible" />
													<Style.Triggers>
													   <DataTrigger Binding="{Binding ElementName=ScreenshotsButton,Path=IsChecked}" Value="True">
															<Setter Property="Grid.Visibility" Value="Collapsed"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</StackPanel.Style>-->
											<ToggleButtonEx x:Name="SSScrollUpButton" Style="{DynamicResource SSScrollUpButton}" VerticalAlignment="Center" Margin="8,0" MinWidth="60"
															  Height="60" HorizontalContentAlignment="Center"  />
											<ToggleButtonEx x:Name="SSScrollDownButton" Style="{DynamicResource SSScrollDownButton}" VerticalAlignment="Center" Margin="8,0" MinWidth="60"
															  Height="60" HorizontalContentAlignment="Center"  />
										</StackPanel>
									</StackPanel>
									
									<StackPanel>
										<StackPanel.Style>
											<Style TargetType="StackPanel">
												<Setter Property="Visibility" Value="Collapsed" />
												<Style.Triggers>
													<DataTrigger Binding="{PluginSettings Plugin=NewsViewer, Path=ReviewsAvailable, FallbackValue=False}" Value="True">
														<Setter Property="Visibility" Value="Visible" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</StackPanel.Style>	
										<CheckBoxEx x:Name="NewsButton" VerticalAlignment="Center" Margin="8,0" MinWidth="60"
													Height="60" HorizontalContentAlignment="Center" Style="{DynamicResource NewsButton}" />
										<!--<ToggleButtonEx x:Name="PlayPauseButton" Style="{DynamicResource PlayPauseButton}" Margin="8,0"
														IsChecked="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.SettingsModel.Settings.IsVideoPlaying, Mode=OneWay, FallbackValue={StaticResource False}}"
														Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPlayCommand}" />-->
									</StackPanel>
									

									<StackPanel>
										<StackPanel.Style>
											<Style>
												<Setter Property="StackPanel.Visibility" Value="Visible"></Setter>
												<Style.Triggers>
													<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData, FallbackValue=False}" Value="False">
														<Setter Property="Grid.Visibility" Value="Collapsed"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</StackPanel.Style>
										<!--<CheckBoxEx x:Name="AchievementsButton" VerticalAlignment="Center" Margin="8,0" MinWidth="60"
															  Height="60" HorizontalContentAlignment="Center" Style="{DynamicResource AchievementsButton}" />-->
									</StackPanel>
																		
														  
									<!--<ToggleButtonEx x:Name="TrailerPlayToggleV" Margin="20,0,0,0" Height="{Binding ActualHeight, ElementName=PART_ButtonContext}"
													Style="{DynamicResource TrailerPlayToggle}"
													IsChecked="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.SettingsModel.Settings.IsVideoPlaying, Mode=OneWay, FallbackValue={StaticResource False}}"
													Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPlayCommand}"/>

									<ToggleButtonEx x:Name="TrailerMuteToggleV" Margin="20,0,0,0" Height="{Binding ActualHeight, ElementName=PART_ButtonContext}"
													Style="{DynamicResource TrailerMuteToggle}"
													IsChecked="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.IsPlayerMuted, Mode=OneWay, FallbackValue={StaticResource False}}"
													Command="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoMuteCommand}"/>-->
								</StackPanel>								
				</Grid>
				
				
								<Grid Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Right" 
										FocusVisualStyle="{x:Null}" Visibility="Visible" >
									<Grid.Style>
										<Style>
											<Setter Property="ItemsControl.Opacity" Value="0"/>
											<Setter Property="ItemsControl.Margin" Value="0"/>
											<Style.Triggers>

																						<!--<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsLogoAvailable}" Value="False">
																							<Setter Property="ItemsControl.Margin" Value="70,300,0,0" />
																						</DataTrigger>-->



														<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
																	<DataTrigger.EnterActions>
																		<BeginStoryboard>
																			<Storyboard>
																				<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0:0:0" Duration="0:0:0.5"/>
																			</Storyboard>
																		</BeginStoryboard>
																	</DataTrigger.EnterActions>
														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																 <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
																</Storyboard>
														 </BeginStoryboard>
														</DataTrigger.ExitActions>
																	</DataTrigger>

														<DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
															<DataTrigger.EnterActions>
																<BeginStoryboard>
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.2" Duration="0:0:0.9" From="0" To="1"/>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.EnterActions>
															<DataTrigger.ExitActions>
																<BeginStoryboard>
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.ExitActions>
														</DataTrigger>


											</Style.Triggers>
										</Style>
									</Grid.Style>
									<StackPanel Opacity="1" x:Name="ScrollButtons" Orientation="Vertical" Margin="-1675,-175,0,0">
										<StackPanel.Style>
											<Style>
												<Style.Triggers>
													<!--<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.ExitActions>	
													</DataTrigger>-->
													<!-- <DataTrigger Binding="{Binding IsFocused, ElementName=ScrollDownButton}" Value="True">
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="-1675,-175,0,0">
																		<ThicknessAnimation.EasingFunction>
																			<CubicEase EasingMode="EaseOut"/>
																		</ThicknessAnimation.EasingFunction>
																	</ThicknessAnimation>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.ExitActions>	
													</DataTrigger>
													<DataTrigger Binding="{Binding IsFocused, ElementName=ScrollUpButton}" Value="True">
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.3" To="-1675,-175,0,0">
																		<ThicknessAnimation.EasingFunction>
																			<CubicEase EasingMode="EaseOut"/>
																		</ThicknessAnimation.EasingFunction>
																	</ThicknessAnimation>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.ExitActions>	
													</DataTrigger>-->
													
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding IsFocused, ElementName=ScrollUpButton}" Value="False" />
															<Condition Binding="{Binding IsFocused, ElementName=ScrollDownButton}" Value="False" />
														</MultiDataTrigger.Conditions>
														<MultiDataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:1.8" Duration="0:0:0.2" To="0"/>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:1.5" Duration="0:0:0.3" To="-1695,-175,0,0">
																		<ThicknessAnimation.EasingFunction>
																			<CubicEase EasingMode="EaseOut"/>
																		</ThicknessAnimation.EasingFunction>
																	</ThicknessAnimation>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:1.8" Duration="0:0:0.2" To="-1275,-175,0,0">
																		<ThicknessAnimation.EasingFunction>
																			<CubicEase EasingMode="EaseOut"/>
																		</ThicknessAnimation.EasingFunction>
																	</ThicknessAnimation>
																</Storyboard>
															</BeginStoryboard>
														</MultiDataTrigger.EnterActions>
														<MultiDataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0.2" To="1"/>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0" Duration="0:0:0.3" To="-1695,-175,0,0">
																		<ThicknessAnimation.EasingFunction>
																			<CubicEase EasingMode="EaseOut"/>
																		</ThicknessAnimation.EasingFunction>
																	</ThicknessAnimation>
																	<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0.3" Duration="0:0:0.2" To="-1675,-175,0,0">
																		<ThicknessAnimation.EasingFunction>
																			<CubicEase EasingMode="EaseOut"/>
																		</ThicknessAnimation.EasingFunction>
																	</ThicknessAnimation>
																</Storyboard>
															</BeginStoryboard>
														</MultiDataTrigger.ExitActions>	
													</MultiDataTrigger>
													
												</Style.Triggers>
											</Style>
										</StackPanel.Style>									
										<CheckBoxEx x:Name="ScrollUpButton" Style="{DynamicResource ScrollUpButton}" Margin="0,0,0,10"/>
										<CheckBoxEx x:Name="ScrollDownButton" Style="{DynamicResource ScrollDownButton}" />
									</StackPanel>	
								</Grid>



                            <!--<Grid Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Right" 
				  FocusVisualStyle="{x:Null}" Visibility="Visible" >

                        <Grid.Style>
                            <Style>
                                <Setter Property="ItemsControl.Opacity" Value="0"/>
                                <Setter Property="ItemsControl.Margin" Value="0,0,20,20"/>
                                <Style.Triggers>


                                            <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0:0:0" Duration="0:0:0.5"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                        	<DataTrigger.ExitActions>
                                            	<BeginStoryboard>
                                                	<Storyboard>
                                                   	 <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
                                                	</Storyboard>
                                           	 </BeginStoryboard>
                                        	</DataTrigger.ExitActions>
                                                    	</DataTrigger>

                                            <DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.2" Duration="0:0:0.9" From="0" To="1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>


                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
				</Grid>-->


				<TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,0"
							x:Name="GDId" Text="{Binding Game.Id, NotifyOnTargetUpdated=True}" FontFamily="Lato" FontSize="26" Foreground="#00000000">

					<TextBlock.Triggers>
						<EventTrigger RoutedEvent="Binding.TargetUpdated">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="0" />
									<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" From="0" To="1" BeginTime="0:0:0" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</TextBlock.Triggers>

					<TextBlock.Style>
						<Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBaseStyle}">
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>


							</Style.Triggers>
						</Style>
					</TextBlock.Style>

				</TextBlock>


			<StackPanel Grid.RowSpan="3" Grid.ColumnSpan="2" Width="Auto"  MaxHeight="300" HorizontalAlignment="Left" VerticalAlignment="Top">

                        <StackPanel.Style>
                            <Style>
                                <Setter Property="ItemsControl.Opacity" Value="0"/>
                                <Setter Property="ItemsControl.Margin" Value="70,150,0,0"/>
                                <Setter Property="ItemsControl.Visibility" Value="Collapsed"/>
                                <Style.Triggers>


                                                                            <DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsLogoAvailable}" Value="False">
                                                                                <Setter Property="ItemsControl.Visibility" Value="Visible" />
                                                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0.9" BeginTime="0:0:0" Duration="0:0:0.5"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                        	<DataTrigger.ExitActions>
                                            	<BeginStoryboard>
                                                	<Storyboard>
                                                   	 <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="0.9" To="0"/>
                                                	</Storyboard>
                                           	 </BeginStoryboard>
                                        	</DataTrigger.ExitActions>
                                                    	</DataTrigger>

                                            <DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.2" Duration="0:0:0.9" From="0" To="1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>	
											<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>	
											</DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                                    <TextBlock x:Name="GDDisplayName" Text="{Binding Game.Name, NotifyOnTargetUpdated=True}" FontFamily="{DynamicResource FontFamilyBlack}" FontSize="80" Foreground="White"
					TextWrapping="Wrap" MaxHeight="150" TextTrimming="CharacterEllipsis">
                                <TextBlock.Effect>
                                    <DropShadowEffect ShadowDepth="2" RenderingBias="Quality" Color="{DynamicResource BlackColor}" />
                                </TextBlock.Effect>

                            </TextBlock>

			</StackPanel>

					  <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Row="2" Grid.Column="0" FocusVisualStyle="{x:Null}" >
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="ItemsControl.Opacity" Value="0"/>
                                    <Setter Property="ItemsControl.Margin" Value="50,-1150,0,0"/>
                                <Setter Property="ItemsControl.Visibility" Value="Visible"/>
                                <Style.Triggers>
									<!--<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
										<Setter Property="ItemsControl.Visibility" Value="Collapsed" />
									</DataTrigger>-->
									<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" From="0" To="1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>

									<DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
										<DataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" From="0" To="1"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.EnterActions>
										<DataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.ExitActions>
									</DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>


                                                        <!--<Line HorizontalAlignment="Center" Stroke="{DynamicResource SelectionLightBrush}" StrokeThickness="2" 
								Y1="{Binding ActualHeight, ElementName=GDDetails}" Margin="10,0,20,0"/>-->

                                                	<StackPanel x:Name="GDScroll" FocusVisualStyle="{x:Null}" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,100,0" >
	
															<StackPanel.Style>
																<Style>
																	<Style.Triggers>
																		<DataTrigger Binding="{Binding ElementName=ScrollDownButton,Path=IsChecked}" Value="True">
																			<DataTrigger.EnterActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" By="0,-300,0,0" IsAdditive="True">
																							<ThicknessAnimation.EasingFunction>
																								<CubicEase EasingMode="EaseOut"/>
																							</ThicknessAnimation.EasingFunction>
																						</ThicknessAnimation>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.EnterActions>
																			<DataTrigger.ExitActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" By="0,-300,0,0" IsAdditive="True">
																							<ThicknessAnimation.EasingFunction>
																								<CubicEase EasingMode="EaseOut"/>
																							</ThicknessAnimation.EasingFunction>
																						</ThicknessAnimation>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.ExitActions>
																		</DataTrigger>
																		
																	</Style.Triggers>
																</Style>
															</StackPanel.Style>	
															
                                                        <StackPanel x:Name="GDDetails" Orientation="Horizontal" Width="700" Margin="0,0,0,0" Focusable="False" FocusVisualStyle="{x:Null}">

															<StackPanel.Style>
																<Style>
																	<Style.Triggers>
																		<DataTrigger Binding="{Binding ElementName=ScrollUpButton,Path=IsChecked}" Value="True">
																			<DataTrigger.EnterActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" By="0,300,0,0" IsAdditive="True">
																							<ThicknessAnimation.EasingFunction>
																								<CubicEase EasingMode="EaseOut"/>
																							</ThicknessAnimation.EasingFunction>
																						</ThicknessAnimation>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.EnterActions>
																			<DataTrigger.ExitActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" By="0,300,0,0" IsAdditive="True">
																							<ThicknessAnimation.EasingFunction>
																								<CubicEase EasingMode="EaseOut"/>
																							</ThicknessAnimation.EasingFunction>
																						</ThicknessAnimation>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.ExitActions>
																		</DataTrigger>
																		
																		<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
																			<DataTrigger.EnterActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.EnterActions>
																			<DataTrigger.ExitActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" To="1"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.ExitActions>	
																		</DataTrigger>
																	</Style.Triggers>
																</Style>
															</StackPanel.Style>	

                                                            <StackPanel>
                                                                <StackPanel Margin="0,750,0,0">
																	<StackPanel.Style>
																		<Style>
																			<Style.Triggers>
																				<DataTrigger Binding="{Binding ElementName=NewsButton,Path=IsChecked}" Value="True">
																					<DataTrigger.EnterActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" To="0,100,0,0">
																									<ThicknessAnimation.EasingFunction>
																										<CubicEase EasingMode="EaseOut"/>
																									</ThicknessAnimation.EasingFunction>
																								</ThicknessAnimation>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.EnterActions>
																					<DataTrigger.ExitActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" To="0,750,0,0">
																									<ThicknessAnimation.EasingFunction>
																										<CubicEase EasingMode="EaseOut"/>
																									</ThicknessAnimation.EasingFunction>
																								</ThicknessAnimation>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.ExitActions>
																				</DataTrigger>
																				<DataTrigger Binding="{Binding ElementName=ReviewsButton,Path=IsChecked}" Value="True">
																					<DataTrigger.EnterActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" To="0,100,0,0">
																									<ThicknessAnimation.EasingFunction>
																										<CubicEase EasingMode="EaseOut"/>
																									</ThicknessAnimation.EasingFunction>
																								</ThicknessAnimation>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.EnterActions>
																					<DataTrigger.ExitActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:1" To="0,750,0,0">
																									<ThicknessAnimation.EasingFunction>
																										<CubicEase EasingMode="EaseOut"/>
																									</ThicknessAnimation.EasingFunction>
																								</ThicknessAnimation>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.ExitActions>
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</StackPanel.Style>	
                                                                </StackPanel>	

															<StackPanel x:Name="Information">
																<StackPanel.Style>
																	<Style TargetType="{x:Type StackPanel}">
																		<Setter Property="Visibility" Value="Visible" />
																		<Setter Property="Opacity" Value="1" />
																		<Style.Triggers>
																			<DataTrigger Binding="{Binding ElementName=Information, Path=Opacity}" Value="0">
																				<Setter Property="Visibility" Value="Collapsed" />
																			</DataTrigger>																				
																			<DataTrigger Binding="{Binding ElementName=NewsButton,Path=IsChecked}" Value="True">
																				<DataTrigger.EnterActions>
																					<BeginStoryboard>
																						<Storyboard>
																							<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
																						</Storyboard>
																					</BeginStoryboard>
																				</DataTrigger.EnterActions>
																				<DataTrigger.ExitActions>
																					<BeginStoryboard>
																						<Storyboard>
																							<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
																						</Storyboard>
																					</BeginStoryboard>
																				</DataTrigger.ExitActions>	
																			</DataTrigger>																				
																			<DataTrigger Binding="{Binding ElementName=ReviewsButton,Path=IsChecked}" Value="True">
																				<DataTrigger.EnterActions>
																					<BeginStoryboard>
																						<Storyboard>
																							<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
																						</Storyboard>
																					</BeginStoryboard>
																				</DataTrigger.EnterActions>
																				<DataTrigger.ExitActions>
																					<BeginStoryboard>
																						<Storyboard>
																							<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
																						</Storyboard>
																					</BeginStoryboard>
																				</DataTrigger.ExitActions>	
																			</DataTrigger>
																		</Style.Triggers>
																	</Style>
																</StackPanel.Style>
																
																<!--<Grid Height="Auto" Width="675" Margin="10,0,10,30" Tag="{PluginSettings Plugin=SuccessStory, Path=HasData}">
																	<Grid.Style>
																		<Style TargetType="{x:Type Grid}">
																			<Setter Property="Visibility" Value="Collapsed" />
																			<Style.Triggers>
																				<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True">
																					<Setter Property="Visibility" Value="Visible" />
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																	<Grid.Effect>
																		<DropShadowEffect ShadowDepth="0" Opacity="0.75" BlurRadius="15"/>
																	</Grid.Effect>

																	<Grid.OpacityMask>
																		<VisualBrush Visual="{Binding ElementName=Mask}" />
																	</Grid.OpacityMask>

																	<Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}">
																		<Border.Background>
																			<SolidColorBrush Color="{DynamicResource GridItemBackgroundColor}"/>
																		</Border.Background>
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<TextBlock HorizontalAlignment="Left" Height="Auto" Margin="20,15,0,0" TextWrapping="Wrap" Text="Achievements" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontSize="14"/>
																	<Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,2" />
																	<Button x:Name="PART_CustomScButton" Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,8,20,0" Background="{x:Null}" Cursor="Hand">
																		<ContentControl x:Name="SuccessStory_PluginViewItem" />
																	</Button>
																	<StackPanel Visibility="Visible" VerticalAlignment="Top" Margin="0,100,0,20">
																		<StackPanel.Style>
																			<Style TargetType="{x:Type StackPanel}">
																				<Setter Property="Visibility" Value="Collapsed" />
																			</Style>
																		</StackPanel.Style>
																		<ContentControl x:Name="SuccessStory_PluginProgressBar" Margin="20,20,20,0" Height="30" Opacity="0.8" />


																		<ContentControl x:Name="SuccessStory_PluginCompactUnlocked" Height="Auto" Margin="20,15,20,0" />


																		<ContentControl x:Name="SuccessStory_PluginCompactLocked" Height="Auto" Margin="20,15,20,10" />


																	</StackPanel>
																	<StackPanel Margin="20,70,20,20" VerticalAlignment="Top" Height="40" Orientation="Horizontal">
																		<StackPanel Height="Auto" Margin="20,0,0,0" HorizontalAlignment="Left" Orientation="Horizontal">
																			<TextBlock HorizontalAlignment="Left" Height="Auto" Margin="1,3,1,0" TextWrapping="Wrap" Text="&#xEDD7;" Width="Auto" VerticalAlignment="Top" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" FontSize="18"/>
																			<Label Content="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" 
																						   HorizontalAlignment="Left" FontSize="18"
																						   Padding="5,3,0,5" Margin="15,0,0,0" Height="50" Width="Auto" VerticalAlignment="Top">
																				<Label.Style>
																					<Style TargetType="{x:Type Label}">
																						<Setter Property="Padding" Value="5,3,5,5" />
																						<Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																							<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</Label.Style>
																			</Label>
																			<Label Content="/" Height="Auto" Width="Auto" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="1,3,1,0"/>
																			<Label Content="{PluginSettings Plugin=SuccessStory, Path=Total}" 
																				HorizontalAlignment="Left" FontSize="18"
																				Padding="5,3,0,5" Margin="0" Height="50" Width="Auto" VerticalAlignment="Top">
																				<Label.Style>
																					<Style TargetType="{x:Type Label}">
																						<Setter Property="Padding" Value="5,3,5,5" />
																						<Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																							<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</Label.Style>
																			</Label>
																		</StackPanel>
																		<StackPanel Height="Auto" Margin="150,0,0,0" HorizontalAlignment="Left" Orientation="Horizontal">
																			<Label Content="{PluginSettings Plugin=SuccessStory, Path=Percent}" 
																				HorizontalAlignment="Left" FontSize="18"
																				Padding="5,3,0,5" Margin="0" Height="50" Width="Auto" VerticalAlignment="Top">
																				<Label.Style>
																					<Style TargetType="{x:Type Label}">
																						<Setter Property="Padding" Value="5,3,5,5" />
																						<Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																							<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</Label.Style>
																			</Label>
																			<Label Content="%" Height="Auto" Width="Auto" FontSize="18" Margin="1,3,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
																			<Label Content="Complete" Height="Auto" Width="Auto" FontSize="18" Margin="10,3,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
																		</StackPanel>
																		<StackPanel Height="Auto" Margin="150,0,0,0" HorizontalAlignment="Left" Orientation="Horizontal">
																			<Label Content="{PluginSettings Plugin=SuccessStory, Path=Locked}" 
																						HorizontalAlignment="Left" FontSize="18"
																						Padding="5,3,0,5" Margin="0" Height="50" Width="Auto" VerticalAlignment="Top">
																				<Label.Style>
																					<Style TargetType="{x:Type Label}">
																						<Setter Property="Padding" Value="5,3,5,5" />
																						<Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																							<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
																								<Setter Property="Foreground" Value="White" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</Label.Style>
																			</Label>
																			<Label Content="Remaining" Height="Auto" Width="Auto" FontSize="18" Margin="10,3,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
																		</StackPanel>
																	</StackPanel>
																</Grid>-->
																
																<!--ExtraInfo-->
																<Grid x:Name="ExtraInfo" Height="Auto" Width="675" Margin="10,0,10,30">
																	<Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}" Background="#FF252525">
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,0" />
																	<StackPanel Height="Auto" Width="Auto" Orientation="Horizontal" Margin="0,15,0,20" VerticalAlignment="Top" HorizontalAlignment="Stretch">
																		<!--<StackPanel x:Name="TimePlayedInfo" Height="Auto" Width="Auto" MaxWidth="300" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">								
																			<TextBlock FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold"
																					   Text="{DynamicResource LOCTimePlayed}" />
																			<TextBlock x:Name="TimePlayed" Height="Auto" Foreground="{DynamicResource GlyphBrush}" FontSize="50" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,-10,10,0" 
																					   Text="{Binding Playtime, Converter={StaticResource PlayTimeToStringConverter}}" />
																		</StackPanel>-->
																		<StackPanel x:Name="InGameInfo" Height="Auto" Width="Auto" MaxWidth="300" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0">
																			<StackPanel.Style>
																				<Style TargetType="StackPanel">
																					<Setter Property="Visibility" Value="Collapsed" />
																					<Style.Triggers>
																						<DataTrigger Binding="{PluginSettings Plugin=NewsViewer, Path=PlayersCountAvailable, FallbackValue=False}" Value="True">
																							<Setter Property="Visibility" Value="Visible" />
																						</DataTrigger>
																					</Style.Triggers>
																				</Style>
																			</StackPanel.Style>		
																			<TextBlock FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold"
																					   Text="Players Online" />
																			<ContentControl x:Name="NewsViewer_PlayersInGameViewerControl">
																				<ContentControl.Resources>
																					<Style TargetType="Button" BasedOn="{StaticResource PlayersCountButtonStyle}">
																						<Setter Property="Focusable" Value="False" />
																					</Style>
																				</ContentControl.Resources>
																			</ContentControl>
																		</StackPanel>
																	</StackPanel>
																</Grid>

																<!--Description-->
																<Grid Height="Auto" Width="675" Margin="10,0,10,30" Visibility="{Binding Visibility, ElementName=PART_HtmlDescription}">
																	<Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}" Background="#FF252525">
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<!--<TextBlock x:Name="textBlock" Text="{DynamicResource LOCGameDescriptionTitle}"
																   FontWeight="Bold" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="20,15,0,0" />
																	<Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,-0.001,0" />-->
																		<StackPanel x:Name="PART_ElemDescription" Margin="25,25,25,25" Height="Auto" Width="Auto" VerticalAlignment="Top">
																			<HtmlTextView Focusable="False" x:Name="PART_HtmlDescription"
																			  HtmlFontSize="30"
																			  HtmlFontFamily="{DynamicResource FontFamily}"
																			  HtmlForeground="{DynamicResource TextColor}"
																			  LinkForeground="{DynamicResource GlyphColor}"
																			  Margin="0" Width="Auto" />
																		</StackPanel>
																</Grid>
																
																<!--Genre/Feature/Tags-->
																<Grid x:Name="GFTInfo" Height="Auto" Width="675" Margin="10,0,10,30">
																	<Border CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}" Background="#FF252525">
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,0" />
																			<StackPanel Height="Auto" Width="Auto" Orientation="Horizontal" Margin="0,15,0,20" VerticalAlignment="Top" HorizontalAlignment="Stretch">
																				<StackPanel x:Name="GenresInfo" Height="Auto" Width="200" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="20,0,10,0">
																					<TextBlock Style="{DynamicResource BaseTextBlockStyle}" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Text="Genres" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
																					<ItemsControl  x:Name="Genres" Focusable="False" ItemsSource="{Binding Game.Genres}" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0">
																						<ItemsControl.ItemsPanel>
																							<ItemsPanelTemplate>
																								<WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																							</ItemsPanelTemplate>
																						</ItemsControl.ItemsPanel>
																						<ItemsControl.ItemTemplate>
																							<DataTemplate>
																								<ButtonEx Style="{DynamicResource LinksButton}" Content="{Binding Name}" Background="{DynamicResource GridItemBackgroundBrush}" Margin="0,10,10,0"
																									ToolTip="{Binding Url}" ToolTipService.InitialShowDelay="500" 
																									Command="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.SetGenresFilterCommand}"
																									CommandParameter="{Binding}" KeyboardNavigation.IsTabStop="False"/>
																							</DataTemplate>
																						</ItemsControl.ItemTemplate>
																					</ItemsControl>
																					<!--<TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
																							   Text="{Binding Genres, Converter={StaticResource ListToStringConverter}}" 
																							   TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="Auto" MaxWidth="155" />-->
																				</StackPanel>
																				<StackPanel x:Name="FeaturesInfo" Height="Auto" Width="200" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}" Margin="10,0,10,0">
																					<TextBlock Style="{DynamicResource BaseTextBlockStyle}" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Text="Features" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
																					<ItemsControl x:Name="Features" Focusable="False" ItemsSource="{Binding Game.Features}" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0">
																			<ItemsControl.ItemsPanel>
																				<ItemsPanelTemplate>
																					<WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																				</ItemsPanelTemplate>
																			</ItemsControl.ItemsPanel>
																			<ItemsControl.ItemTemplate>
																				<DataTemplate>
																					<ButtonEx Style="{DynamicResource LinksButton}" Content="{Binding Name}" Background="{DynamicResource GridItemBackgroundBrush}" Margin="0,10,10,0"
																						ToolTip="{Binding Url}" ToolTipService.InitialShowDelay="500" 
																						Command="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.SetGenresFilterCommand}"
																						CommandParameter="{Binding}" KeyboardNavigation.IsTabStop="False"/>
																				</DataTemplate>
																			</ItemsControl.ItemTemplate>
																		</ItemsControl>
																					<!--<TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
																							   Text="{Binding Features, Converter={StaticResource ListToStringConverter}}" 
																							   TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="Auto" MaxWidth="155" />-->
																				</StackPanel>
																				<StackPanel x:Name="TagsInfo" Height="Auto" Width="200" Margin="10,0,20,0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{x:Null}">
																					<TextBlock Style="{DynamicResource BaseTextBlockStyle}" Text="Tags" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" Margin="5,0,5,20" HorizontalAlignment="Left" FontWeight="Bold" />
																		<ItemsControl Focusable="False" x:Name="Tags" ItemsSource="{Binding Game.Tags}" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0">
																			<ItemsControl.ItemsPanel>
																				<ItemsPanelTemplate>
																					<WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																				</ItemsPanelTemplate>
																			</ItemsControl.ItemsPanel>
																			<ItemsControl.ItemTemplate>
																				<DataTemplate>
																					<ButtonEx Style="{DynamicResource LinksButton}" Content="{Binding Name}" Background="{DynamicResource GridItemBackgroundBrush}" Margin="0,10,10,0"
																						ToolTip="{Binding Url}" ToolTipService.InitialShowDelay="500" 
																						Command="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.SetGenresFilterCommand}"
																						CommandParameter="{Binding}" KeyboardNavigation.IsTabStop="False"/>
																				</DataTemplate>
																			</ItemsControl.ItemTemplate>
																		</ItemsControl>
																					<!--<TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
																							   Text="{Binding Tags, Converter={StaticResource ListToStringConverter}}" 
																							   TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="Auto" MaxWidth="155" />-->																
																				</StackPanel>
																			</StackPanel>
																</Grid>
		
																<!--Reviews-->
																<!--<Grid Height="Auto" Width="675" Margin="10,0,10,30">
																	<Grid.Style>
																		<Style TargetType="{x:Type Grid}">
																			<Setter Property="Visibility" Value="Collapsed" />
																			<Style.Triggers>
																				<DataTrigger Binding="{PluginSettings Plugin=NewsViewer, Path=ReviewsAvailable, FallbackValue=False}" Value="True">
																					<Setter Property="Visibility" Value="Visible" />
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																	<Border Background="#FF252525" CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}">
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<StackPanel Visibility="Visible">
																		<StackPanel.Style>
																			<Style TargetType="{x:Type StackPanel}">
																				<Setter Property="Visibility" Value="Collapsed" />
																			</Style>
																		</StackPanel.Style>
																		<ContentControl x:Name="ReviewViewer_ReviewsControl" Margin="20,60,20,10" />

																	</StackPanel>
																	<TextBlock HorizontalAlignment="Left" Height="Auto" Margin="20,15,0,0" TextWrapping="Wrap" Text="Reviews" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontSize="20" Foreground="#FFFFFF" FontFamily="{DynamicResource FontFamily}" />
																	<Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,0" />
																</Grid>-->
																
																<!--Notes-->
																<Grid x:Name="NotesInfo" Height="Auto" Width="675" Margin="10,0,10,30">
																	<Border Background="#FF252525" CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}">
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<StackPanel>																	
                                                                    <TextBlock x:Name="Notes" Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Notes}" Margin="20,60,20,20" Padding="0"
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" />
																	</StackPanel>
																	<TextBlock HorizontalAlignment="Left" Height="Auto" Margin="20,15,0,0" TextWrapping="Wrap" Text="{DynamicResource LOCNotesLabel}" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontSize="20"/>
																	<Separator Background="#FF2C2C2C" VerticalAlignment="Top" Margin="0,50,0,0" />
																</Grid>
															</StackPanel>
													
                                                                <!--News-->
																<Grid x:Name="NewsInfo" Height="Auto" Width="675" Margin="10,0,10,30" >
																	<Grid.Style>
																		<Style TargetType="{x:Type Grid}">
																			<Setter Property="Visibility" Value="Visible" />
																			<Setter Property="Opacity" Value="0" />
																			<Style.Triggers>
																				<DataTrigger Binding="{Binding ElementName=NewsInfo, Path=Opacity}" Value="0">
																					<Setter Property="Visibility" Value="Collapsed" />
																				</DataTrigger>																				
																				<DataTrigger Binding="{Binding ElementName=NewsButton,Path=IsChecked}" Value="True">
																					<DataTrigger.EnterActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.EnterActions>
																					<DataTrigger.ExitActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.ExitActions>	
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																	<Border Background="#FF252525" CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}">
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<StackPanel Margin="0,15,10,10">
																		<StackPanel.Style>
																			<Style TargetType="{x:Type StackPanel}">
																				<Setter Property="Visibility" Value="Collapsed" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginSettings FallbackValue=False, Plugin=NewsViewer, Path=ReviewsAvailable}" Value="True">
																						<Setter Property="Visibility" Value="Visible" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<ContentControl x:Name="NewsViewer_NewsViewerControl" Margin="20,0,0,20" Focusable="False" IsTabStop="False" />
																	</StackPanel>
																</Grid>
													
                                                                <!--Reviews-->
																<Grid x:Name="ReviewsInfo" Height="Auto" Width="675" Margin="10,0,10,30" >
																	<Grid.Style>
																		<Style TargetType="{x:Type Grid}">
																			<Setter Property="Visibility" Value="Visible" />
																			<Setter Property="Opacity" Value="0" />
																			<Style.Triggers>
																				<DataTrigger Binding="{Binding ElementName=ReviewsInfo, Path=Opacity}" Value="0">
																					<Setter Property="Visibility" Value="Collapsed" />
																				</DataTrigger>																				
																				<DataTrigger Binding="{Binding ElementName=ReviewsButton,Path=IsChecked}" Value="True">
																					<DataTrigger.EnterActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.EnterActions>
																					<DataTrigger.ExitActions>
																						<BeginStoryboard>
																							<Storyboard>
																								<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
																							</Storyboard>
																						</BeginStoryboard>
																					</DataTrigger.ExitActions>	
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																	<Border Background="#FF252525" CornerRadius="15" BorderBrush="{DynamicResource GridItemBorderBrush}" Opacity="{DynamicResource GridContainerOpacity}">
																		<Border.Effect>
																			<DropShadowEffect Opacity="0.75" BlurRadius="15" ShadowDepth="0"/>
																		</Border.Effect>
																		<Border.CacheMode>
																			<BitmapCache RenderAtScale="2" />
																		</Border.CacheMode>
																	</Border>
																	<StackPanel Margin="0,15,10,10">
																		<StackPanel.Style>
																			<Style TargetType="{x:Type StackPanel}">
																				<Setter Property="Visibility" Value="Collapsed" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginSettings FallbackValue=False, Plugin=ReviewViewer, Path=ReviewsAvailable}" Value="True">
																						<Setter Property="Visibility" Value="Visible" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<ContentControl x:Name="ReviewViewer_ReviewsControl" Margin="20,0,0,20" Focusable="False" IsTabStop="False" />
																	</StackPanel>
																</Grid>
																
																
																<!--<StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCDevelopersLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Developers, Converter={StaticResource ListToStringConverter}}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCPublishersLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Publishers, Converter={StaticResource ListToStringConverter}}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCCategoriesLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Categories, Converter={StaticResource ListToStringConverter}}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCSeriesLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Series, Converter={StaticResource ListToStringConverter}}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCAgeRatingsLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding AgeRatings, Converter={StaticResource ListToStringConverter}}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCRegionsLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Regions, Converter={StaticResource ListToStringConverter}}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>
                                                                
                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCSourceLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Source}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCVersionLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Version}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCUserScore}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding UserScore}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCCommunityScore}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding CommunityScore}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCPlayCountLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding PlayCount}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCAddedLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Added}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCModifiedLabel}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding Modified}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>

                                                             <StackPanel Margin="0,0,0,10">
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyleAlt}"
                                                                               Text="{DynamicResource LOCGameId}"
                                                                               Margin="0,0,0,1" />
                                                                    <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"
                                                                               Text="{Binding GameId}" 
                                                                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" Width="420" />
                                                                </StackPanel>-->
                                                            </StackPanel>
                                                        </StackPanel>
                                                	</StackPanel>
										</StackPanel>


												<!--Trailer-->
												<Border x:Name="GDMediaBorder" Grid.RowSpan="3" Background="#00000000" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="-47"
														Width="{StaticResource DesignWidth}" Height="{StaticResource DesignHeight}">
														
													<!--<Grid Name="GDDelay" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="-47">
														<Grid.Style>
															<Style TargetType="Grid">
																<Setter Property="Visibility" Value="Visible" />
																<Setter Property="Opacity" Value="0" />
																<Setter Property="Background" Value="#FF000000" />
																<Setter Property="Height" Value="{Binding Height, ElementName=GDMediaBorder}" />
																<Setter Property="Width" Value="{Binding Width, ElementName=GDMediaBorder}" />
																<Style.Triggers>
																	<MultiDataTrigger>
																		<MultiDataTrigger.Conditions>
																			<Condition Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1"/>
																		</MultiDataTrigger.Conditions>
																		<MultiDataTrigger.EnterActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:4" Duration="0:0:1" From="0" To="0"/>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:5" Duration="0:0:1.5" From="0" To="1"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</MultiDataTrigger.EnterActions>
																		<MultiDataTrigger.ExitActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</MultiDataTrigger.ExitActions>
																	</MultiDataTrigger>
																</Style.Triggers>
															</Style>
														</Grid.Style>-->
														
														<Grid Name="GDVideoFeed" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="-47">
															<Grid.Style>
																<Style TargetType="Grid">
																	<Setter Property="Visibility" Value="Visible" />
																	<Setter Property="Opacity" Value="0" />
																	<Setter Property="Background" Value="#FF000000" />
																	<Setter Property="Height" Value="{Binding Height, ElementName=GDMediaBorder}" />
																	<Setter Property="Width" Value="{Binding Width, ElementName=GDMediaBorder}" />
																<Style.Triggers>													

																		<!--<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1"/>
																			</MultiDataTrigger.Conditions>
																			<MultiDataTrigger.EnterActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:1" From="0" To="0"/>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:3" Duration="0:0:1.5" From="0" To="1"/>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:2" Duration="0:0:1" From="0,0,0,0.01" To="0,0,0,0"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</MultiDataTrigger.EnterActions>
																			<MultiDataTrigger.ExitActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0" Duration="0:0:0" From="0,0,0,0" To="0,0,0,0.01"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</MultiDataTrigger.ExitActions>
																		</MultiDataTrigger>-->
																	
																		<!--<DataTrigger Binding="{Binding ElementName=ScreenshotsBG, Path=Opacity}" Value="1">
																			<DataTrigger.EnterActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.3" Duration="0:0:0.2" To="0"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.EnterActions>
																			<DataTrigger.ExitActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0.2" To="1"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.ExitActions>	
																		</DataTrigger>-->

																		<DataTrigger Binding="{Binding ElementName=StopPlayButton, Path=IsChecked}" Value="True">									
																			<DataTrigger.EnterActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0.2" To="1"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.EnterActions>
																			<DataTrigger.ExitActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.5" Duration="0:0:0.2" To="0"/>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.ExitActions>	
																		</DataTrigger>

																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable}" Value="False"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Visibility" Value="Collapsed" />
																			<Setter Property="Background" Value="#00000000" />	
																		</MultiDataTrigger>	

																		<DataTrigger Binding="{Binding ElementName=GDVideoFeed, Path=Opacity}" Value="0">
																			<Setter Property="Visibility" Value="Collapsed" />
																		</DataTrigger>

																		<!--<DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="0">
																			<Setter Property="Visibility" Value="Collapsed" />
																		</DataTrigger>

																		<DataTrigger Binding="{Binding ElementName=GDVideoFeed, Path=Opacity}" Value="1">
																			<Setter Property="Background" Value="#FF000000" />
																		</DataTrigger>

																		<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>	-->			

																	</Style.Triggers>
																</Style>
															</Grid.Style>

															<ContentControl x:Name="ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound" UseLayoutRounding="True">

																<ContentControl.Style>
																	<Style TargetType="ContentControl">
																		<Setter Property="Visibility" Value="Collapsed" />
																		<Style.Triggers>

																			<MultiDataTrigger>
																				<MultiDataTrigger.Conditions>
																					<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable}" Value="True"/>
																				</MultiDataTrigger.Conditions>
																				<Setter Property="Visibility" Value="Visible" />
																			</MultiDataTrigger>															
													
																		   <!--<DataTrigger Binding="{Binding ElementName=StopPlayButton,Path=IsChecked}" Value="True">
																				<Setter Property="Visibility" Value="Collapsed"/>
																			</DataTrigger>-->
																			<!--<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
																				<Setter Property="OpacityMask">
																					<Setter.Value>
																						<VisualBrush Visual="{Binding ElementName=MaskSolidTrailer}"/>
																					</Setter.Value>
																				</Setter>
																			</DataTrigger>-->								


																		</Style.Triggers>
																	</Style>
																</ContentControl.Style>
															</ContentControl>

														</Grid>
													<!--</Grid>-->

												</Border>
			
												<!--Screenshots-->
												<Border Focusable="False" x:Name="ScreenshotsBorder" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Center" Panel.ZIndex="-50"
														Width="{StaticResource DesignWidth}" Height="{StaticResource DesignHeight}">
													<Grid Focusable="False" x:Name="ScreenshotsBG" Visibility="Visible" Margin="-15,0" VerticalAlignment="Top" HorizontalAlignment="Center" Panel.ZIndex="-50">

														<Grid.Style>
															<Style TargetType="Grid">
																<Setter Property="Opacity" Value="0" />
																<Setter Property="Height" Value="{Binding Height, ElementName=ScreenshotsBorder}" />
																<Setter Property="Width" Value="{Binding Width, ElementName=ScreenshotsBorder}" />
															<Style.Triggers>													

																	<!--<MultiDataTrigger>
																		<MultiDataTrigger.Conditions>
																			<Condition Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1"/>
																		</MultiDataTrigger.Conditions>
																		<MultiDataTrigger.EnterActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:1" From="0" To="0"/>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:3" Duration="0:0:1.5" From="0" To="1"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</MultiDataTrigger.EnterActions>
																		<MultiDataTrigger.ExitActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0" From="1" To="0"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</MultiDataTrigger.ExitActions>
																	</MultiDataTrigger

																	<DataTrigger Binding="{Binding ElementName=StopPlayButton, Path=IsChecked}" Value="True">										
																		<DataTrigger.EnterActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.EnterActions>
																		<DataTrigger.ExitActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.ExitActions>	
																	</DataTrigger>-->

																	<DataTrigger Binding="{Binding ElementName=ScreenshotsButton, Path=IsChecked}" Value="True">										
																		<DataTrigger.EnterActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:0.2" To="1"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.EnterActions>
																		<DataTrigger.ExitActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.8" Duration="0:0:0.2" To="0"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.ExitActions>	
																	</DataTrigger>

																	<!--<DataTrigger Binding="{Binding ElementName=ScreenshotsBG, Path=Opacity}" Value="0">
																		<Setter Property="Visibility" Value="Collapsed" />
																	</DataTrigger>

																	<DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="0">
																		<Setter Property="Visibility" Value="Collapsed" />
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Visible">
																		<Setter Property="Visibility" Value="Collapsed" />
																	</DataTrigger>-->

																</Style.Triggers>
															</Style>
														</Grid.Style>
														
														
														<!--<Grid.Style>													
															<Style>
																<Setter Property="Grid.Visibility" Value="Visible" />
																<Setter Property="Grid.Opacity" Value="1" />
																<Style.Triggers>
																	<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData, FallbackValue=False}" Value="False">
																		<Setter Property="Grid.Visibility" Value="Collapsed" />
																	</DataTrigger>															
																	<DataTrigger Binding="{Binding ElementName=ScreenshotsButton,Path=IsChecked}" Value="True">
																		<DataTrigger.EnterActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
																					<ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0" Duration="0:0:0.2" To="0"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.EnterActions>
																		<DataTrigger.ExitActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.ExitActions>	
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ElementName=ScreenshotsBorder, Path=Opacity}" Value="0">
																		<Setter Property="Grid.Visibility" Value="Collapsed" />
																	</DataTrigger>	
																</Style.Triggers>
															</Style>
														</Grid.Style>-->
														
														
														<StackPanel Focusable="False" Margin="0,0,0,0" Orientation="Horizontal">

															<StackPanel.Style>
																<Style TargetType="StackPanel">
																	<Style.Triggers>

																		<!--<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding ElementName=ScreenshotsBG, Path=Margin}" Value="0,0,0,0"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Visibility" Value="Visible" />
																		</MultiDataTrigger>-->
																		
																		<DataTrigger Binding="{Binding ElementName=SSScrollUpButton,Path=IsChecked}" Value="True">
																			<DataTrigger.EnterActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:2" By="0,1080,0,0" IsAdditive="True">
																							<ThicknessAnimation.EasingFunction>
																								<CubicEase EasingMode="EaseOut"/>
																							</ThicknessAnimation.EasingFunction>
																						</ThicknessAnimation>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.EnterActions>
																			<DataTrigger.ExitActions>
																				<BeginStoryboard>
																					<Storyboard>
																						<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:2" By="0,1080,0,0" IsAdditive="True">
																							<ThicknessAnimation.EasingFunction>
																								<CubicEase EasingMode="EaseOut"/>
																							</ThicknessAnimation.EasingFunction>
																						</ThicknessAnimation>
																					</Storyboard>
																				</BeginStoryboard>
																			</DataTrigger.ExitActions>
																		</DataTrigger>
												
																	   <!--<DataTrigger Binding="{Binding ElementName=StopPlayButton,Path=IsChecked}" Value="True">
																			<Setter Property="Visibility" Value="Collapsed"/>
																		</DataTrigger>-->
																		<!--<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
																			<Setter Property="OpacityMask">
																				<Setter.Value>
																					<VisualBrush Visual="{Binding ElementName=MaskSolidTrailer}"/>
																				</Setter.Value>
																			</Setter>
																		</DataTrigger>-->								


																	</Style.Triggers>
																</Style>
															</StackPanel.Style>
															
															<StackPanel Focusable="False" HorizontalAlignment="Center" Margin="-4,-4,0,-25" Width="{StaticResource DesignWidth}" Height="100000">

																<StackPanel.Style>
																	<Style>
																		<Style.Triggers>																
																			<DataTrigger Binding="{Binding ElementName=SSScrollDownButton,Path=IsChecked}" Value="True">
																				<DataTrigger.EnterActions>
																					<BeginStoryboard>
																						<Storyboard>
																							<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:2" By="0,-1080,0,0" IsAdditive="True">
																								<ThicknessAnimation.EasingFunction>
																									<CubicEase EasingMode="EaseOut"/>
																								</ThicknessAnimation.EasingFunction>
																							</ThicknessAnimation>
																						</Storyboard>
																					</BeginStoryboard>
																				</DataTrigger.EnterActions>
																				<DataTrigger.ExitActions>
																					<BeginStoryboard>
																						<Storyboard>
																							<ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:2" By="0,-1080,0,0" IsAdditive="True">
																								<ThicknessAnimation.EasingFunction>
																									<CubicEase EasingMode="EaseOut"/>
																								</ThicknessAnimation.EasingFunction>
																							</ThicknessAnimation>
																						</Storyboard>
																					</BeginStoryboard>
																				</DataTrigger.ExitActions>
																			</DataTrigger>
																		</Style.Triggers>
																	</Style>
																</StackPanel.Style>	
																<ListView Width="3840" Height="100000" Background="#00000000" Visibility="Visible" Margin="0"
																		 ItemsSource="{PluginSettings Plugin=ScreenshotsVisualizer, Path=ListScreenshots}">
																	<ListView.ItemContainerStyle>
																		<Style TargetType="Control">
																			<Setter Property="Focusable" Value="False" />
																			<Style.Triggers>

																				<MultiDataTrigger>
																					<MultiDataTrigger.Conditions>
																						<Condition Binding="{Binding ElementName=ScreenshotsBG, Path=Opacity}" Value="0"/>
																					</MultiDataTrigger.Conditions>
																					<Setter Property="Visibility" Value="Collapsed" />
																				</MultiDataTrigger>
														
																			   <!--<DataTrigger Binding="{Binding ElementName=StopPlayButton,Path=IsChecked}" Value="True">
																					<Setter Property="Visibility" Value="Collapsed"/>
																				</DataTrigger>-->
																				<!--<DataTrigger Binding="{Binding ElementName=ZoomButton,Path=IsChecked}" Value="True">
																					<Setter Property="OpacityMask">
																						<Setter.Value>
																							<VisualBrush Visual="{Binding ElementName=MaskSolidTrailer}"/>
																						</Setter.Value>
																					</Setter>
																				</DataTrigger>-->								


																			</Style.Triggers>
																		</Style>
																	</ListView.ItemContainerStyle>
																	<ListView.ItemTemplate>
																		<DataTemplate>
																			<Image HorizontalAlignment="Center" Width="{StaticResource DesignWidth}" VerticalAlignment="Center" Margin="0,0,0,-4" Source="{Binding FileName}"/>
																		</DataTemplate>
																	</ListView.ItemTemplate>
																</ListView>
															</StackPanel>
														</StackPanel>
													</Grid>
												</Border>


				<!--<Grid x:Name="GDMusicGrid" Height="0" Width="0" Background="#00000000">

			<TextBlock Name="GDMainMusicPath" Tag="{DynamicResource ExtraMetadataPath}" Visibility="Collapsed">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text">
                                            <Setter.Value>
                                                                        <MultiBinding StringFormat="{}{0}{1}{2}{3}">
                                                                            <Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
                                                                            <Binding Source="\ExtraMetadata\games\"/>
                                                                            <Binding Path="Game.Id"/>
                                                                            <Binding Source="\music.mp3" />
                                                                        </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <MediaElement MediaElementBehaviors.Repeat="True" x:Name="GDMainMusicSource" Tag="{DynamicResource UseAbsoluteExtraMetadataPath}">

                                <MediaElement.Style>
                                    	<Style TargetType="MediaElement">
                                        <Setter Property="Volume" Value="0"/>
                                        <Setter Property="MediaElement.Source" Value="{Binding ElementName=GDMainMusicPath, Path=Text}"/>
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding ElementName=GDId, Path=Opacity}" Value="1">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Volume" BeginTime="0:0:0.8" Duration="0:0:0.7" From="0" To="1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Volume" Duration="0:0:0" From="1" To="0"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>

                				<MultiDataTrigger>
                    				<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=GDVideoFeed, Path=Visibility}" Value="Visible"/>
							<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=NewContextVideoAvailable}" Value="True"/>
                    				</MultiDataTrigger.Conditions>
                                                            <Setter Property="MediaElement.Source" Value="" />
                				</MultiDataTrigger>

                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="False">
                                                <Setter Property="MediaElement.Source" Value="" />
                                            </DataTrigger>

                                                    <DataTrigger Binding="{Binding ElementName=GDMainMusicSource, Path=Volume}" Value="0">
                                                        <Setter Property="MediaElement.Source" Value="" />
                                                    </DataTrigger>

                                                </Style.Triggers>
                                    </Style>
                                </MediaElement.Style>
                            </MediaElement>

			</Grid>-->

					<!--Data for extra triggers-->					
					<TextBlock x:Name="GameLibrary" Text="{Binding Library}" Visibility="Collapsed" />
					<TextBlock x:Name="GamePlatform" Text="{Binding Platforms, Converter={StaticResource ListToStringConverter}}" Visibility="Collapsed" />

                    
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.SettingsModel.Settings.IsVideoPlaying}" Value="{StaticResource True}">
                            <Setter Property="Command" Value="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.VideoPauseCommand}" TargetName="StopPlayButton"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ExtraMetadataLoader_VideoLoaderControl_NoControls_Sound, Path=Content.SettingsModel.Settings.IsVideoPlaying}" Value="{StaticResource False}">
                            <Setter Property="Command" Value="" TargetName="ScreenshotsButton"/>
                        </DataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=StopPlayButton, Path=IsChecked}" Value="False" />
                                <Condition Binding="{Binding ElementName=ScreenshotsButton, Path=IsChecked}" Value="True" />
                            </MultiDataTrigger.Conditions>
							<Setter Property="IsChecked" TargetName="ScreenshotsButton" Value="True"/>
                        </MultiDataTrigger>
						
                        <!--<DataTrigger Binding="{Binding ElementName=CompletionStatus, Path=Text}" Value="Wishlist">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="TimePlayed" />
                        </DataTrigger>-->
						
						<!--<DataTrigger Binding="{Binding ElementName=GameRelease, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="YearInfo" />
						</DataTrigger>-->
						
						<DataTrigger Binding="{Binding ElementName=ReleaseYear, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="YearInfo" />
						</DataTrigger>
						
						<DataTrigger Binding="{Binding ElementName=Tags, Path=ItemsSource}" Value="Demo">
							<Setter Property="Visibility" Value="Visible" TargetName="DemoInfo" />
						</DataTrigger>
						
						<DataTrigger Binding="{Binding ElementName=PlayStatus, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="PlayStatusInfo" />
						</DataTrigger>
						
						<DataTrigger Binding="{Binding Favorite}" Value="False" >
							<Setter Property="Visibility" Value="Collapsed" TargetName="ButtonFavoriteImage" />
						</DataTrigger>						
						<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=HasData}" Value="False" >
							<Setter Property="Visibility" Value="Collapsed" TargetName="LibraryManagement_PluginFeaturesIconList" />
						</DataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{PluginSettings Plugin=LibraryManagement, Path=HasData}" Value="False" />
                                <Condition Binding="{Binding Favorite}" Value="False" />
                            </MultiDataTrigger.Conditions>
							<Setter Property="Visibility" Value="Collapsed" TargetName="FavoriteFeaturesInfo" />
                        </MultiDataTrigger>
						
						
						
						<!--<DataTrigger Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="PC">
							<Setter Property="Visibility" Value="Collapsed" TargetName="GamePlatform" />
						</DataTrigger>						
						<DataTrigger Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="Playnite">
							<Setter Property="Visibility" Value="Collapsed" TargetName="GameLibrary" />
						</DataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="PC" />
                                <Condition Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="Playnite" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GamePlatformInfo" />
                        </MultiDataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="" />
                                <Condition Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="Playnite" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GamePlatformInfo" />
                        </MultiDataTrigger>-->
						
						<DataTrigger Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="PC">
							<Setter Property="Visibility" Value="Collapsed" TargetName="ButtonPlatformImage" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="ButtonPlatformImage" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="Playnite">
							<Setter Property="Visibility" Value="Collapsed" TargetName="ButtonSourceImage" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="ButtonSourceImage" />
						</DataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="PC" />
                                <Condition Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="Playnite" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PlatformSourceInfo" />
                        </MultiDataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="PC" />
                                <Condition Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PlatformSourceInfo" />
                        </MultiDataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="" />
                                <Condition Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="Playnite" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PlatformSourceInfo" />
                        </MultiDataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=GamePlatform, Path=Text}" Value="" />
                                <Condition Binding="{Binding ElementName=GameLibrary, Path=Text}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PlatformSourceInfo" />
                        </MultiDataTrigger>
						
						<DataTrigger Binding="{Binding ElementName=Notes, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="NotesInfo" />
						</DataTrigger>
						
						<DataTrigger Binding="{PluginSettings Plugin=NewsViewer, Path=PlayersCountAvailable, FallbackValue=False}" Value="False">
							<Setter Property="Visibility" Value="Collapsed" TargetName="ExtraInfo" />
						</DataTrigger>
						
						<DataTrigger Binding="{Binding ElementName=CommunityScore, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="CommunityScoreInfo" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=UserScore, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="UserScoreInfo" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=CriticScore, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="CriticScoreInfo" />
						</DataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=CommunityScore, Path=Text}" Value="" />
                                <Condition Binding="{Binding ElementName=UserScore, Path=Text}" Value="" />
                                <Condition Binding="{Binding ElementName=CriticScore, Path=Text}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ScoreInfo" />
                        </MultiDataTrigger>
						
						<DataTrigger Binding="{Binding ElementName=Genres, Path=ItemsSource}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="GenresInfo" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=Features, Path=ItemsSource}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="FeaturesInfo" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=Tags, Path=ItemsSource}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="TagsInfo" />
						</DataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!--<Condition Binding="{Binding ElementName=Version, Path=Text}" Value="" />-->
                                <Condition Binding="{Binding ElementName=Genres, Path=ItemsSource}" Value="{x:Null}" />
                                <Condition Binding="{Binding ElementName=Features, Path=ItemsSource}" Value="{x:Null}" />
                                <Condition Binding="{Binding ElementName=Tags, Path=ItemsSource}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GFTInfo" />
                        </MultiDataTrigger>	
						
						<!--<DataTrigger Binding="{Binding ElementName=Version, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="VersionInfo" />
						</DataTrigger>-->
						<DataTrigger Binding="{Binding ElementName=InstallSize, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="InstallSizeInfo" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=InstallDirectory, Path=Text}" Value="">
							<Setter Property="Visibility" Value="Collapsed" TargetName="InstallDirectoryInfo" />
						</DataTrigger>	
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!--<Condition Binding="{Binding ElementName=Version, Path=Text}" Value="" />-->
                                <Condition Binding="{Binding ElementName=InstallSize, Path=Text}" Value="" />
                                <Condition Binding="{Binding ElementName=InstallDirectory, Path=Text}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="InstallationInfo" />
                        </MultiDataTrigger>						
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>